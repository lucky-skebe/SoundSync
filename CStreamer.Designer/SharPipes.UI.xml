<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharPipes.UI</name>
    </assembly>
    <members>
        <member name="T:SharPipes.UI.App">
            <summary>
            Interaction logic for App.xaml.
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:SharPipes.UI.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:SharPipes.UI.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:SharPipes.UI.ElementRenderer">
            <summary>
            Interaktionslogik f√ºr ElementRenderer.xaml.
            </summary>
            <summary>
            ElementRenderer
            </summary>
        </member>
        <member name="F:SharPipes.UI.ElementRenderer.ElementProperty">
            <summary>
            Identifies the <see cref="P:SharPipes.UI.ElementRenderer.Element"/> dependency property.
            </summary>
        </member>
        <member name="M:SharPipes.UI.ElementRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.ElementRenderer"/> class.
            </summary>
        </member>
        <member name="P:SharPipes.UI.ElementRenderer.Element">
            <summary>
            Gets or sets the element to render.
            </summary>
            <value>
            The element to render.
            </value>
        </member>
        <member name="M:SharPipes.UI.ElementRenderer.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.Graphical`1">
            <summary>
            Base class for differnet Graphical Elements rendering a specific type of object.
            </summary>
            <typeparam name="TPipe">Thy type of object this class renders.</typeparam>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.Graphical`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.Graphical`1"/> class.
            </summary>
            <param name="element">The object to render using this Class.</param>
        </member>
        <member name="E:SharPipes.UI.GraphicalDecorators.Graphical`1.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.Graphical`1.X">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.Graphical`1.Y">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.Graphical`1.Element">
            <summary>
            Gets the object to render using this Class.
            </summary>
            <value>
            The object to render using this Class.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.Graphical`1.Id">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.Graphical`1.ZIndex">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.Graphical`1.Equals(SharPipes.UI.GraphicalDecorators.IGraphical)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.Graphical`1.OnPropertyChanged(System.String)">
            <summary>
            Fires a <see cref="E:SharPipes.UI.GraphicalDecorators.Graphical`1.PropertyChanged"/> event.
            </summary>
            <param name="propName">The name of the changed property.</param>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.GraphicalEdge">
            <summary>
            Draws a Beziere curve between two grapical pads.
            </summary>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalEdge.#ctor(SharPipes.UI.GraphicalDecorators.GraphicalSrcPad,SharPipes.UI.GraphicalDecorators.GraphicalSinkPad)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalEdge"/> class.
            </summary>
            <param name="src">The <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad"/> this link should start from.</param>
            <param name="sink">The <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad"/> this link should go to.</param>
        </member>
        <member name="E:SharPipes.UI.GraphicalDecorators.GraphicalEdge.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.X">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Y">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Width">
            <summary>
            Gets the Width.
            </summary>
            <value>
            The Width.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Height">
            <summary>
            Gets the Height.
            </summary>
            <value>
            The Height.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Start">
            <summary>
            Gets the startpoint of the Bezier Curve connecting two elements.
            </summary>
            <value>
            The startpoint of the Bezier Curve connecting two elements.
            Relative to the position defined by <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.X"/> and <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Y"/>.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.End">
            <summary>
            Gets the endpoint of the Bezier Curve connecting two elements.
            </summary>
            <value>
            The endpoint of the Bezier Curve connecting two elements.
            Relative to the position defined by <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.X"/> and <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Y"/>.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Control1">
            <summary>
            Gets the first controlpoint of the Bezier Curve connecting two elements.
            </summary>
            <value>
            The first controlpoint of the Bezier Curve connecting two elements.
            Relative to the position defined by <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.X"/> and <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Y"/>.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Control2">
            <summary>
            Gets the second controlpoint of the Bezier Curve connecting two elements.
            </summary>
            <value>
            The second controlpoint of the Bezier Curve connecting two elements.
            Relative to the position defined by <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.X"/> and <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Y"/>.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Src">
            <summary>
            Gets the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad"/> this link should start from.
            </summary>
            <value>
            The <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad"/> this link should start from.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Sink">
            <summary>
            Gets the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad"/> this link should go to.
            </summary>
            <value>
            The <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad"/> this link should go to.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Id">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalEdge.ZIndex">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalEdge.Equals(SharPipes.UI.GraphicalDecorators.IGraphical)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalEdge.OnPropertyChanged(System.String)">
            <summary>
            Fires a <see cref="E:SharPipes.UI.GraphicalDecorators.GraphicalEdge.PropertyChanged"/> event.
            </summary>
            <param name="propName">The name of the changed property.</param>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.GraphicalElement">
            <summary>
            Draws an element of a specific pipeline.
            </summary>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalElement.#ctor(SharPipes.Pipes.Base.IElement,System.Windows.Point,SharPipes.UI.GraphicalDecorators.GraphicalPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalElement"/> class.
            </summary>
            <param name="element">The element that should be drawn.</param>
            <param name="position">The position where the element should be drawn.</param>
            <param name="pipeline">The pipline that should be notified of changes to the element.</param>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalElement.X">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalElement.Y">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalElement.Name">
            <summary>
            Gets the name of the element Type.
            </summary>
            <value>
            The name of the element Type.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalElement.ZIndex">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalElement.MoveTo(System.Windows.Point)">
            <summary>
            Move the element to given coordinate.
            </summary>
            <param name="position">the new position of the topleft corner of the element.</param>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalElement.Equals(SharPipes.UI.GraphicalDecorators.GraphicalElement)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.GraphicalPipeline">
             <summary>
             A <see cref="T:SharPipes.Pipes.Base.PipeLine"/> with additional position information.
            
             All calls to this pipeline will be forwarded to the underlying pipeline and this pipeline reacts to the different pipeline events.
             </summary>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.#ctor(SharPipes.Pipes.Base.PipeLine)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalPipeline"/> class.
            </summary>
            <param name="pipeLine">the underlying piple to forward calls to.</param>
        </member>
        <member name="E:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.CollectionChanged">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.Remove(SharPipes.UI.GraphicalDecorators.GraphicalElement)">
            <summary>
            Removes an element from the pipeline.
            This unlinks the element from all other elements.
            Afterwars this element won't be handled by the pipleline.
            </summary>
            <param name="graphicalElement">The element to remove from the pipeline.</param>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.CreateNodeFromTemplate(SharPipes.Pipes.Base.IElement,System.Windows.Point)">
            <summary>
            Creates a new element from an existing template.
            Only the type gets copied.
            Properties need to be initialized manually.
            </summary>
            <param name="template">The template element.</param>
            <param name="position">The position the element should be rendered at.</param>
            <returns>A new element of the same type as the template.</returns>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.Add(SharPipes.Pipes.Base.IElement,System.Windows.Point)">
            <summary>
            Add an element to the pipeline to be handled.
            The pipeline handles the <see cref="T:SharPipes.Pipes.Base.State"/> of all it's elements and serielizes elements it owns when it gets serialized.
            </summary>
            <param name="element">The element to add to the pipeline.</param>
            <param name="position">The position the element should be rendered at.</param>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.Connect``1(SharPipes.Pipes.Base.SrcPad{``0},SharPipes.Pipes.Base.SinkPad{``0})">
            <summary>
            Connect two element pads, letting them send data from the src to the sink.
            </summary>
            <typeparam name="TValue">The type of data that can be sent.</typeparam>
            <param name="src">The src ot the data.</param>
            <param name="sink">The destination of the data.</param>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.Start">
            <summary>
            Moves the pipeline and all it's elements to the <see cref="F:SharPipes.Pipes.Base.State.Playing"/> state.
            </summary>
            <returns>A task that represents the state change operation.</returns>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.Stop">
            <summary>
            Moves the pipeline and all it's elements to the <see cref="F:SharPipes.Pipes.Base.State.Stopped"/> state.
            </summary>
            <returns>A task that represents the state change operation.</returns>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalPipeline.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad">
            <summary>
            Draws a single SinkPad of the given <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.Parent"/> <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalElement"/>.
            </summary>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.#ctor(SharPipes.Pipes.Base.ISinkPad,SharPipes.UI.GraphicalDecorators.GraphicalElement,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad"/> class.
            </summary>
            <param name="element">The underlying SinkPad.</param>
            <param name="parent">The element his pad belongs to.</param>
            <param name="padIndex">The Index of this Pad used to calculate position relative to the element.</param>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.Parent">
            <summary>
            Gets the element his pad belongs to.
            </summary>
            <value>
            The element his pad belongs to.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.X">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.Y">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSinkPad.ZIndex">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad">
            <summary>
            Draws a single SrcPad of the given <see cref="P:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.Parent"/> <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalElement"/>.
            </summary>
        </member>
        <member name="M:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.#ctor(SharPipes.Pipes.Base.ISrcPad,SharPipes.UI.GraphicalDecorators.GraphicalElement,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad"/> class.
            </summary>
            <param name="element">The underlying SrcPad.</param>
            <param name="parent">The element his pad belongs to.</param>
            <param name="padIndex">The Index of this Pad used to calculate position relative to the element.</param>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.Parent">
            <summary>
            Gets the element his pad belongs to.
            </summary>
            <value>
            The element his pad belongs to.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.X">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.Y">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.GraphicalSrcPad.ZIndex">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.GraphicalDecorators.IGraphical">
            <summary>
            Describes Something that can be positioned inside a Canvas.
            </summary>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.IGraphical.Id">
            <summary>
            Gets an unique ID used for identifying IGraphicals.
            </summary>
            <value>
            An unique ID used for identifying IGraphicals.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.IGraphical.X">
            <summary>
            Gets the Y position of the control.
            </summary>
            <value>
            The Y position of the control.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.IGraphical.Y">
            <summary>
            Gets the X position of the control.
            </summary>
            <value>
            The X position of the control.
            </value>
        </member>
        <member name="P:SharPipes.UI.GraphicalDecorators.IGraphical.ZIndex">
            <summary>
            Gets the <see cref="F:System.Windows.Controls.Panel.ZIndexProperty" /> this element should be rendered at.
            </summary>
            <value>
            The <see cref="F:System.Windows.Controls.Panel.ZIndexProperty" /> this element should be rendered at.
            </value>
        </member>
        <member name="T:SharPipes.UI.Helpers.DependencyObjectExtensions">
            <summary>
            Provides extensionmethods for <see cref="T:System.Windows.DependencyObject"/> objects.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.DependencyObjectExtensions.FindAnchestor``1(System.Windows.DependencyObject)">
            <summary>
            Finds the first visual parent of a certain type.
            </summary>
            <typeparam name="T">The type to look for.</typeparam>
            <param name="current">The visual element to start the search at.</param>
            <returns>The first parent of a given type or null if no element was found.</returns>
        </member>
        <member name="T:SharPipes.UI.Helpers.DipatchedCommandConverter">
            <summary>
            Converts normal <see cref="T:System.Windows.Input.ICommand">ICommands</see> into <see cref="T:SharPipes.UI.Helpers.DispatchedCommand">DispatchedCommands</see> to dispatch their ebents on a given Dispatcher.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.DipatchedCommandConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DipatchedCommandConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.Helpers.DispatchedDeviceList">
            <summary>
            A wrapper around an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> that dispatched the changeEvents onto a given <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedDeviceList.#ctor(System.Collections.ObjectModel.ObservableCollection{SharPipes.Pipes.Buttplug.ButtPlugClientDeviceWrapper},System.Windows.Threading.Dispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.Helpers.DispatchedDeviceList"/> class.
            </summary>
            <param name="collection">The underlying List.</param>
            <param name="currentDispatcher">The dispatcher to dispatch the CollectionChangedEvents on.</param>
        </member>
        <member name="T:SharPipes.UI.Helpers.DispatchedDeviceListConverter">
            <summary>
            Creates a <see cref="T:SharPipes.UI.Helpers.DispatchedObservableCollectionConverter`1"/> of type <see cref="T:SharPipes.Pipes.Buttplug.ButtPlugClientDeviceWrapper"/> from a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedDeviceListConverter.GetWrapper(System.Collections.ObjectModel.ObservableCollection{SharPipes.Pipes.Buttplug.ButtPlugClientDeviceWrapper},System.Windows.Threading.Dispatcher)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.Helpers.DispatchedObservableCollection`1">
            <summary>
            Wraps a <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to send all it's event onto a given <see cref="T:System.Windows.Threading.Dispatcher"/>.
            </summary>
            <typeparam name="T">The tyoe of the Items in the underlying Observablecollection.</typeparam>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0},System.Windows.Threading.Dispatcher)">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.Helpers.DispatchedObservableCollection`1"/> class.
            </summary>
            <param name="collection">The underlyinf collection.</param>
            <param name="dispatcher">The to send the events on.</param>
        </member>
        <member name="E:SharPipes.UI.Helpers.DispatchedObservableCollection`1.CollectionChanged">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Count">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.Helpers.DispatchedObservableCollection`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Add(`0)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Contains(`0)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.IndexOf(`0)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Insert(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollection`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.Helpers.DispatchedObservableCollectionConverter`1">
            <summary>
            Wraps an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> into a <see cref="T:SharPipes.UI.Helpers.DispatchedObservableCollection`1"/>.
            </summary>
            <typeparam name="T">The Type of the underlying Observable Collections items.</typeparam>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollectionConverter`1.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollectionConverter`1.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.DispatchedObservableCollectionConverter`1.GetWrapper(System.Collections.ObjectModel.ObservableCollection{`0},System.Windows.Threading.Dispatcher)">
            <summary>
            Create a wrapper around.
            </summary>
            <param name="collection">The inner Collection that should be wrapped.</param>
            <param name="dispatcher">The dispatcher to send all Events to.</param>
            <returns>The wrapped List.</returns>
        </member>
        <member name="T:SharPipes.UI.Helpers.IconPathFactory">
            <summary>
            Factory for creating standard Icons.
            </summary>
        </member>
        <member name="T:SharPipes.UI.Helpers.IconPathFactory.Icons">
            <summary>
            The kinds of Icons this Factory can create.
            </summary>
        </member>
        <member name="F:SharPipes.UI.Helpers.IconPathFactory.Icons.Delete">
            <summary>
            A trashcan.
            </summary>
        </member>
        <member name="F:SharPipes.UI.Helpers.IconPathFactory.Icons.Settings">
            <summary>
            A gear.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.IconPathFactory.GetIcon(SharPipes.UI.Helpers.IconPathFactory.Icons)">
            <summary>
            Create an Icon given a specific IconType.
            </summary>
            <param name="name">The kind of Icon you want to show.</param>
            <returns>The Icon.</returns>
        </member>
        <member name="T:SharPipes.UI.Helpers.ObjectVisibilityConverter">
            <summary>
            Converts any non null value into <see cref="F:System.Windows.Visibility.Visible"/> and null into <see cref="F:System.Windows.Visibility.Collapsed"/>.
            Usefull for when you want to show an element depending on if it has a Datacontext.
            </summary>
        </member>
        <member name="M:SharPipes.UI.Helpers.ObjectVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.Helpers.ObjectVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml.
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:SharPipes.UI.MainWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.MainWindow"/> class.
            </summary>
        </member>
        <member name="P:SharPipes.UI.MainWindow.PipeElements">
            <summary>
            Gets a list of <see cref="T:SharPipes.Pipes.Base.IElement"/> to use as templates.
            </summary>
            <value>
            A list of <see cref="T:SharPipes.Pipes.Base.IElement"/> to use as templates.
            </value>
        </member>
        <member name="P:SharPipes.UI.MainWindow.Pipeline">
            <summary>
            Gets or sets the graphical pipeline used.
            </summary>
            <value>
            The graphical pipeline used.
            </value>
        </member>
        <member name="M:SharPipes.UI.MainWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:SharPipes.UI.PipeLineItem">
            <summary>
            Draws a sigle element, pad or link of a <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalPipeline" />.
            </summary>
        </member>
        <member name="M:SharPipes.UI.PipeLineItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharPipes.UI.PipeLineItem"/> class.
            </summary>
        </member>
        <member name="M:SharPipes.UI.PipeLineItem.OnApplyTemplate">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.PipeLineItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.PipeLineItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.PipeLineRenderer">
            <summary>
            Draws a <see cref="T:SharPipes.UI.GraphicalDecorators.GraphicalPipeline"/>.
            </summary>
        </member>
        <member name="F:SharPipes.UI.PipeLineRenderer.SelectedElementProperty">
            <summary>
            Identifies the <see cref="P:SharPipes.UI.PipeLineRenderer.SelectedElement"/> dependency property.
            </summary>
        </member>
        <member name="P:SharPipes.UI.PipeLineRenderer.SelectedElement">
            <summary>
            Gets or sets the selected Graphical Element.
            </summary>
            <value>
            The selected Graphical Element.
            </value>
        </member>
        <member name="M:SharPipes.UI.PipeLineRenderer.IsItemItsOwnContainerOverride(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.PipeLineRenderer.GetContainerForItemOverride">
            <inheritdoc/>
        </member>
        <member name="M:SharPipes.UI.PipeLineRenderer.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:SharPipes.UI.Properties.strings">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:SharPipes.UI.Properties.strings.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zur√ºck, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:SharPipes.UI.Properties.strings.Culture">
            <summary>
              √úberschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads f√ºr alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:SharPipes.UI.Properties.strings.FileFilter">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Json files (*.json)|*.json|All files (*.*)|*.* √§hnelt.
            </summary>
        </member>
        <member name="T:SharPipes.UI.SettingsControl">
            <summary>
            A Controls that shows Settings/Options for all Interactions of a given element.
            </summary>
        </member>
    </members>
</doc>
